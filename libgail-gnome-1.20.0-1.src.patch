--- origsrc/libgail-gnome-1.20.0/gail-gnome/bonobo-accessibility-init.c	2007-08-13 04:51:35.000000000 -0500
+++ src/libgail-gnome-1.20.0/gail-gnome/bonobo-accessibility-init.c	2007-12-10 01:04:28.968750000 -0600
@@ -55,7 +55,7 @@
   AtkObject          *parent;
   SpiAccessible      *co = NULL;
 
-  dprintf ("Bonobo::ControlFame::getParentAccessible [%p]\n", control_frame);
+  debug_printf ("Bonobo::ControlFame::getParentAccessible [%p]\n", control_frame);
 
   g_return_val_if_fail (BONOBO_IS_CONTROL_FRAME (control_frame), CORBA_OBJECT_NIL);
 
@@ -76,7 +76,7 @@
   BonoboControl *control = BONOBO_CONTROL (bonobo_object_from_servant (servant));
   BonoboControlAccessible *co = NULL;
 
-  dprintf ("Bonobo::Control::getAccessible [%p]\n", control);
+  debug_printf ("Bonobo::Control::getAccessible [%p]\n", control);
 
   g_return_val_if_fail (control != NULL, CORBA_OBJECT_NIL);
   
@@ -128,7 +128,7 @@
 G_MODULE_EXPORT int
 gtk_module_init(gint *argc, char** argv[])
 {
-  dprintf ("BonoboUI Accessibility Module loaded\n");
+  debug_printf ("BonoboUI Accessibility Module loaded\n");
 
   gail_accessibility_init ();
 
@@ -146,5 +146,5 @@
 void
 gnome_accessibility_module_shutdown (void)
 {
-  dprintf ("BonoboUI Accessibility Module shutdown\n");
+  debug_printf ("BonoboUI Accessibility Module shutdown\n");
 }
--- origsrc/libgail-gnome-1.20.0/gail-gnome/bonobo-control-accessible.c	2007-07-09 06:14:22.000000000 -0500
+++ src/libgail-gnome-1.20.0/gail-gnome/bonobo-control-accessible.c	2007-12-10 01:04:28.968750000 -0600
@@ -35,7 +35,7 @@
   control_accessible = BONOBO_CONTROL_ACCESSIBLE (
 		  		bonobo_object_from_servant (servant));
 
-  dprintf ("Accessibility::Accessible::_get_parent [%p]\n", control_accessible);
+  debug_printf ("Accessibility::Accessible::_get_parent [%p]\n", control_accessible);
   
   g_return_val_if_fail (control_accessible != NULL, CORBA_OBJECT_NIL);
   g_return_val_if_fail (control_accessible->control != NULL, CORBA_OBJECT_NIL);
@@ -66,7 +66,7 @@
   GtkWidget               *widget;
   AtkObject               *atko;
 
-  dprintf ("bonobo_control_accessible_new [%p]\n", control);
+  debug_printf ("bonobo_control_accessible_new [%p]\n", control);
 
   g_return_val_if_fail (BONOBO_IS_CONTROL (control), NULL);
 
@@ -75,7 +75,7 @@
 
   if (!GTK_IS_PLUG (widget->parent)) 
   {
-      dprintf ("PLUG IS GONE\n");
+      debug_printf ("PLUG IS GONE\n");
       return NULL;
   }
 
--- origsrc/libgail-gnome-1.20.0/gail-gnome/bonobo-control-frame-accessible.c	2007-07-09 06:14:22.000000000 -0500
+++ src/libgail-gnome-1.20.0/gail-gnome/bonobo-control-frame-accessible.c	2007-12-10 01:04:28.984375000 -0600
@@ -33,7 +33,7 @@
       frame_accessible = 
 	  BONOBO_CONTROL_FRAME_ACCESSIBLE (bonobo_object_from_servant (servant));
   }
-  dprintf ("Accessibility::Accessible::_get_ChildCount [%p]\n", frame_accessible);
+  debug_printf ("Accessibility::Accessible::_get_ChildCount [%p]\n", frame_accessible);
 
   g_return_val_if_fail (frame_accessible != NULL, 0);
   g_return_val_if_fail (frame_accessible->control_frame != NULL, 0);
@@ -55,7 +55,7 @@
   }
   Bonobo_Control control;
 
-  dprintf ("Accessibility::Accessible::getChildAtIndex [%p]\n", frame_accessible);
+  debug_printf ("Accessibility::Accessible::getChildAtIndex [%p]\n", frame_accessible);
 
   g_return_val_if_fail (frame_accessible != NULL, CORBA_OBJECT_NIL);
   g_return_val_if_fail (frame_accessible->control_frame != NULL, CORBA_OBJECT_NIL);
@@ -94,7 +94,7 @@
   GtkWidget *widget;
   AtkObject *atko;
 
-  dprintf ("bonobo_control_frame_accessible_new [%p]\n", control_frame);
+  debug_printf ("bonobo_control_frame_accessible_new [%p]\n", control_frame);
 
   g_return_val_if_fail (control_frame != NULL, NULL);
   widget = bonobo_control_frame_get_widget (control_frame);
--- origsrc/libgail-gnome-1.20.0/gail-gnome/bonobo_plug_atk_object.c	2007-07-09 06:14:22.000000000 -0500
+++ src/libgail-gnome-1.20.0/gail-gnome/bonobo_plug_atk_object.c	2007-12-10 01:04:28.984375000 -0600
@@ -40,7 +40,7 @@
   BonoboControl            *control;
   CORBA_Environment         env;
 
-  dprintf ("Plug => SpiRemoteObjectIface->get_accessibile [%p]\n", remote);
+  debug_printf ("Plug => SpiRemoteObjectIface->get_accessibile [%p]\n", remote);
 
   g_return_val_if_fail (BONOBO_IS_PLUG_ATK_OBJECT (remote), CORBA_OBJECT_NIL);
 
@@ -152,7 +152,7 @@
 {
   BonoboPlugAtkObject *retval;
 
-  dprintf ("bonobo_plug_atk_object_new [%p]\n", plug);
+  debug_printf ("bonobo_plug_atk_object_new [%p]\n", plug);
 
   g_return_val_if_fail (GTK_IS_PLUG (plug), NULL);
 
--- origsrc/libgail-gnome-1.20.0/gail-gnome/bonobo_socket_atk_object.c	2007-07-09 06:14:22.000000000 -0500
+++ src/libgail-gnome-1.20.0/gail-gnome/bonobo_socket_atk_object.c	2007-12-10 01:04:28.984375000 -0600
@@ -42,7 +42,7 @@
   Bonobo_Control            control;
   CORBA_Environment         env;
 
-  dprintf ("Socket => SpiRemoteObjectClass->get_accessibile [%p]\n", remote);
+  debug_printf ("Socket => SpiRemoteObjectClass->get_accessibile [%p]\n", remote);
 
   g_return_val_if_fail (BONOBO_IS_SOCKET_ATK_OBJECT (remote), CORBA_OBJECT_NIL);
 
@@ -50,7 +50,7 @@
 
   if (!BONOBO_IS_CONTROL_FRAME (frame)) 
   {
-      dprintf ("CONTROL FRAME IS GONE\n");
+      debug_printf ("CONTROL FRAME IS GONE\n");
       return CORBA_OBJECT_NIL;
   }
   control = bonobo_control_frame_get_control (frame);
@@ -63,7 +63,7 @@
 
   if (BONOBO_EX (&env))
   {
-          dprintf ("%s\n", bonobo_exception_get_text (&env));
+          debug_printf ("%s\n", bonobo_exception_get_text (&env));
 	  retval = CORBA_OBJECT_NIL;
   }
   CORBA_exception_free (&env);
@@ -161,7 +161,7 @@
 {
   BonoboSocketAtkObject *retval;
 
-  dprintf ("bonobo_socket_atk_object_new [%p]\n", socket);
+  debug_printf ("bonobo_socket_atk_object_new [%p]\n", socket);
 
   g_return_val_if_fail (BONOBO_IS_SOCKET (socket), NULL);
 
--- origsrc/libgail-gnome-1.20.0/gail-gnome/gail-gnome-debug.h	2007-07-09 06:14:22.000000000 -0500
+++ src/libgail-gnome-1.20.0/gail-gnome/gail-gnome-debug.h	2007-12-10 01:04:29.000000000 -0600
@@ -25,15 +25,15 @@
 
 G_BEGIN_DECLS
 
-#ifdef GAIL_GNOME_DEBUG
+#ifdef G_ENABLE_DEBUG
 
 #include <stdio.h>
 
-#define dprintf(format...) fprintf (stderr, format)
+#define debug_printf(format...) fprintf (stderr, format)
 
 #else /* G_ENABLE_DEBUG */
 
-static inline void dprintf (const char *format, ...) { };
+static inline void debug_printf (const char *format, ...) { };
 
 #endif /* G_ENABLE_DEBUG */
 
